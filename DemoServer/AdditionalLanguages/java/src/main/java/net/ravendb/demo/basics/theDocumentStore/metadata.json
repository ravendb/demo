{
    "Slug": "the-document-store",
    "SourceFileName": "TheDocumentStore.java",
    "Title": "The Document Store",
    "NonInteractive":  true,
    "DescriptionLines": [
        "**The Document Store** is the main Client API object that establishes the communication between your client application and the RavenDB cluster.",
        "",
        "It is the single access point to a particular cluster, exposing methods to perform operations against the associated server instances,",
        "holding the configuration, topology, cache and any customizations that you might have applied.",
        "",
        "The Document Store is thread safe.",
        "",
        "A single instance of a Document Store (singleton pattern) should be used per the lifetime of the application."
    ],

    "Assets": [
        {
            "Title": "Singleton Pattern",
            "Type" : "link",
            "Url"  : "https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples"
        },
        {
            "Title": "The Document Store",
            "Type" : "link",
            "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/2-zero-to-ravendb#the-document-store"
        },
        {
            "Title": "What is a Document Store",
            "Type" : "link",
            "Url"  : "https://ravendb.net/docs/article-page/latest/csharp/client-api/what-is-a-document-store"
        },
        {
            "Title": "Creating a document store",
            "Type" : "link",
            "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/creating-document-store"
        },
        {
            "Title": "Setting up RavenDB",
            "Type" : "link",
            "Url"  : "https://ravendb.net/docs/article-page/latest/java/start/getting-started"
        },
        {
            "Title": "Sample program",
            "Type" : "link",
            "Url"  : "https://github.com/ravendb/ravendb-jvm-tutorials"
        }
    ],

    "Walkthroughs": [
        {
            "Title": "Define the DocumentStoreHolder class",
            "Slug" : "step-1",
            "DescriptionLines": [
                "* The `DocumentStoreHolder` class holds a _single instance of the Document Store object_ that will be used across your client application.",
                "",
                "* In addition to configuring your database, your cluster topology and a client certificate,<br>",
                "  the Document Store exposes methods to perform operations such as:",
                "",
                "  * Open a Session for database transactions",
                "  * Create & deploy indexes",
                "  * Bulk documents actions",
                "  * Manage the server with low-level operations commands",
                "  * Changes API - receive messages from the server",
                "  * Perform custom actions in response to Session's events",
                "  * Subscription tasks management",
                "  * Export & Import database data."
            ],
            "Assets": [
                {
                    "Title": "The Document Store",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/2-zero-to-ravendb#the-document-store"
                },
                {
                    "Title": "What is a Document Store",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/csharp/client-api/what-is-a-document-store"
                },
                {
                    "Title": "Creating a document store",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/creating-document-store"
                },
                {
                    "Title": "Sample program",
                    "Type" : "link",
                    "Url"  : "https://github.com/ravendb/ravendb-jvm-tutorials#document-store"
                }
            ]
        },
        {
            "Title": "The private store variable",
            "Slug" : "step-2",
            "DescriptionLines": [
                "* The private static variable `store` will hold a reference to the single Document Store instance that will be created.",
                "  The public _getStore()_ method (see step 6) will be used to access this instance."
            ],
            "Assets": [
                {
                    "Title": "Singleton Pattern",
                    "Type" : "link",
                    "Url"  : "https://www.journaldev.com/1377/java-singleton-design-pattern-best-practices-examples"
                }
            ]
        },
        {
            "Title": "Create the document store configuration",
            "Slug" : "step-3",
            "DescriptionLines": [
                "* Method createDocumentStore() returns a configured `DocumentStore` object that is used to initialize the _store_ variable in the previous step."
            ],
            "Assets": []
        },
        {
            "Title": "Configure the DocumentStore Object",
            "Slug" : "step-4",
            "DescriptionLines": [
                "* At this point, before initializing the Document Store (in step 5), the following info can be configured:",
                "",
                "  * _urls_ - Specify a list of URL addresses pointing to the RavenDB server nodes composing your cluster.",
                "    Note: Do not open a DocumentStore using URL addresses that point to nodes outside your cluster.<br>",
                "    Use method _setUrls()_ to set, or pass value to the DocumentStore constructor.",
                "",
                "  * _database_ - Specify the default database name this Document Store will work against.<br>",
                "    Use method _setDatabase()_ to set, or pass value to the DocumentStore constructor.",
                "",
                "  * _certificate_ - Specify the Client Certificate ( *.pfx ) which is used to authenticate the client to the RavenDB server.<br>",
                "    Use method _setCertificate()_ to set.",
                "",
                "  * _conventions_ - Customize various settings and operation modes.<br>",
                "    Use method _setConventions()_ to set."
            ],
            "Assets": [
                {
                    "Title": "Setup a Default Database",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/setting-up-default-database"
                },
                {
                    "Title": "Server URL",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/server/configuration/core-configuration#serverurl"
                },
                {
                    "Title": "Conventions",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/2-zero-to-ravendb#conventions"
                },
                {
                    "Title": "Certificates introduction",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/13-securing-your-ravens#introduction-to-transport-level-security-and-authentication"
                }
            ]
        },
        {
            "Title": "Initialize the Document Store object",
            "Slug" : "step-5",
            "DescriptionLines": [
                "* To be able to work on the DocumentStore, call `initialize()` to get the fully initialized Document Store instance.",
                "",
                "* The initialize() method will:",
                "  * Verify that URLs field is set (not empty)",
                "  * Freeze the Conventions. Conventions can't be set after calling initialize()"
            ],
            "Assets": [
                {
                    "Title": "Creating a document store",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/creating-document-store"
                }
            ]
        },
        {
            "Title": "Access the store",
            "Slug" : "step-6",
            "DescriptionLines": [
                "* Call `getStore()` to access the single Document Store instance."
            ],
            "Assets": [
                {
                    "Title": "What is Session",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/session/what-is-a-session-and-how-does-it-work"
                },
                {
                    "Title": "What are Indexes",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/indexes/what-are-indexes"
                },
                {
                    "Title": "Bulk Insert Operation",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/bulk-insert/how-to-work-with-bulk-insert-operation"
                },
                {
                    "Title": "What are Operations",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/csharp/client-api/operations/what-are-operations"
                },
                {
                    "Title": "What are Data Subscriptions",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/operations/what-are-operations"
                },
                {
                    "Title": "Export & Import data with Smuggler",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/smuggler/what-is-smuggler"
                }
            ]
        }
    ]
}
