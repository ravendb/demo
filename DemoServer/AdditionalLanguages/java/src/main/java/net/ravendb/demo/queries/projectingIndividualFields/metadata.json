{
    "Slug": "projecting-individual-fields",
    "SourceFileName": "ProjectingIndividualFields.java",
    "Title": "Projecting Individual Fields",
    "DescriptionLines": [
        "**Projections** are used in a query when you need to **retrieve only specific document fields** from the server, instead of the whole, full document.",
        "(When projections are Not defined - the full document content is returned).<br>",
        "This reduces the amount of data sent over the network and is useful when only partial data is needed.",
        "",       
        "The returned entities field names can be customized to suit your needs.",
        "",
        "The output projected entities returned by the query are Not tracked by the Session, as they are Not full documents.",
        "",
        "Projections are applied at the last stage in the query pipeline - after documents have been processed, filtered, sorted and paged."
    ],

    "Assets": [
        {
            "Title": "Querying : Projections",
            "Type" : "link",
            "Url"  : "https://ravendb.net/docs/article-page/latest/java/indexes/querying/projections"
        },
        {
            "Title": "How to project query results",
            "Type" : "link",
            "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/session/querying/how-to-project-query-results"
        },
        {
            "Title": "Projecting data in queries",
            "Type" : "link",
            "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/4-deep-dive-into-the-ravendb-client-api#projecting-data-in-queries"
        },
        {
            "Title": "Projecting results",
            "Type" : "link",
            "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/9-querying-in-ravendb#projecting-results"
        },
        {
            "Title": "Sample Program",
            "Type" : "link",
            "Url"  : "https://github.com/ravendb/ravendb-jvm-tutorials/blob/hospital/README.md#4-aggregating-and-projecting"
        }
    ],

    "Walkthroughs": [
        {
            "Title": "Define a query",
            "Slug": "step-1",
            "DescriptionLines": [
                "* Define a query on the 'Companies' collection Using the Session `query()` method."
            ],
            "Assets": [
                {
                    "Title": "Query Overview Demo",
                    "Type" : "demo",
                    "Url"  : "/java/queries/query-overview"
                },
                {
                    "Title": "Sample Program",
                    "Type" : "link",
                    "Url"  : "https://github.com/ravendb/ravendb-jvm-tutorials/blob/hospital/README.md#4-aggregating-and-projecting"
                }
            ]
        },
        {
            "Title": "Define a projection",
            "Slug": "step-2",
            "DescriptionLines": [
                "* Use `selectFields()` to project partial document data from the server.",
                "  The entities returned by the query will have the structure of the custom class _CompanyDetails_, instead of the full _Company_ document.",
                "",
                "* Use the `QueryData()` object to specify:",
                "  * The fields in the document class 'Company' from which values are taken:<br>",
                "    ( _Name_, _Address.City_, _Address.Country_ )",
                "  * The fields in the custom class 'CompanyDetails' that will hold these values in the entities returned by the query:<br>",
                "    ( _CompanyName_ , _City_, _Country_ )",
                "",
                "* Optionally, use the following overload to project all fields from the custom class:<br>",
                "  `.selectFields(CompanyDetails.class)`",
                "",
                "* Calling selectFields() does Not trigger any index creation."
            ],
            "Assets": [
                {
                    "Title": "Querying : Projections",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/indexes/querying/projections"
                },
                {
                    "Title": "How to project query results",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/session/querying/how-to-project-query-results"
                },
                {
                    "Title": "selectFields() - overload example",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/client-api/session/querying/how-to-project-query-results#example-x"
                },
                {
                    "Title": "Projecting data in queries",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/4-deep-dive-into-the-ravendb-client-api#projecting-data-in-queries"
                },
                {
                    "Title": "Projecting results",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/9-querying-in-ravendb#projecting-results"
                }
            ]
        },
        {
            "Title": "Execute the query",
            "Slug": "step-3",
            "DescriptionLines": [
                "* The 'projectedQuery' variable only stores the query definition.<br>",
                "  Execute the query by calling `toList()`.",
                "",
                "* The 'projectedResults' variable will hold the resulting matching entities.",
                "",
                "* The output projected entities returned by the query are Not tracked by the Session,<br>",
                "  as they are not full documents.",
                "",
                "* Any change made to these entities will Not be sent to the server upon calling saveChanges()."
            ],
            "Assets": [
                {
                    "Title": "Sample Program",
                    "Type" : "link",
                    "Url"  : "https://github.com/ravendb/ravendb-jvm-tutorials/blob/hospital/README.md#4-aggregating-and-projecting"
                }
            ]
        }
    ]
}
