{
    "Slug": "store-fields-in-index",
    "SourceFileName": "StoreFieldsInIndex.java",
    "Title": "Store Fields in Index",
    "DescriptionLines": [
        "Querying an index results in matching documents that satisfy the query.",
        "",
        "However, **when one of the index fields is computed and you want to get its value in the query results then Store that Field in the Index**",
        "otherwise you need to re-calculate the value once results return."
    ],

    "Assets": [
        {
            "Title": "Static Indexes Overview Demo",
            "Type": "demo",
            "Url": "/static-indexes/static-indexes-overview"
        },
        {
            "Title": "Project Index Result Demo",
            "Type": "demo",
            "Url": "/java/static-indexes/project-index-results"
        },
        {
            "Title": "Indexes Overview",
            "Type": "link",
            "Url": "https://ravendb.net/docs/article-page/latest/java/studio/database/indexes/indexes-overview"
        },
        {
            "Title": "Storing Data in the Index",
            "Type": "link",
            "Url": "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/10-static-indexes-and-other-advanced-options#storing-data-in-the-index"
        },
        {
            "Title": "Indexes: Storing Data",
            "Type": "link",
            "Url": "https://ravendb.net/docs/article-page/5.3/Csharp/indexes/storing-data-in-index"
        }
    ],

    "Walkthroughs": [
        {
            "Title": "Define the Map index class",
            "Slug": "step-1",
            "DescriptionLines": [
                "* Create the Map index class - inherit from `AbstractIndexCreationTask`."
            ],
            "Assets": [
                {
                    "Title": "Static Indexes Overview Demo",
                    "Type": "demo",
                    "Url": "/java/static-indexes/static-indexes-overview"
                },
                {
                    "Title": "Map Indexes",
                    "Type": "link",
                    "Url": "https://ravendb.net/docs/article-page/latest/java/indexes/map-indexes"
                },
                {
                    "Title": "Static Indexes",
                    "Type": "link",
                    "Url": "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/10-static-indexes-and-other-advanced-options#static-indexes-and-other-advanced-options"
                },
                {
                    "Title": "Working with Indexes",
                    "Type": "link",
                    "Url": "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/12-working-with-indexes#working-with-indexes"
                }
            ]
        },
        {
            "Title": "The index Entry class",
            "Slug": "step-2",
            "DescriptionLines": [
                "* The IndexEntry class defines the _index-fields per entry_ in the index.<br>These fields will be indexed and can be queried on.",
                "",
                "* The _content_ for each index-field is configured in the index constructor (see next step).",
                "",
                "* Field _TotalItemsOrdered_ will be computed and stored in the index (Step 5)."
            ],
            "Assets": [
                {
                    "Title": "Map Indexes",
                    "Type": "link",
                    "Url": "https://ravendb.net/docs/article-page/latest/java/indexes/map-indexes"
                },
                {
                    "Title": "Static Indexes",
                    "Type": "link",
                    "Url": "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/10-static-indexes-and-other-advanced-options#static-indexes-and-other-advanced-options"
                },
                {
                    "Title": "Working with Indexes",
                    "Type": "link",
                    "Url": "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/12-working-with-indexes#working-with-indexes"
                }
            ]
        },
        {
            "Title": "The projected class",
            "Slug": "step-3",
            "DescriptionLines": [
                "* `OrderProjectedDetails` will contain the details projected per document in the results.<br>",
                "  Used in step 6.",
                "",
                "* Note: it is not mandatory for this class to be nested within the index class."
            ],
            "Assets": [
                {
                    /*TODO
                    "Title": "Project Index Result Demo",
                    "Type": "demo",
                    "Url": "/java/static-indexes/project-index-results"
                    */
                }
            ]
        },
        {
            "Title": "The Index Map",
            "Slug": "step-4",
            "DescriptionLines": [
                "* The _Map function_ defines the index-fields content - which fields from the 'Order' document will compose each index-field.",
                "",
                "* The index built will contain a list of indexed terms for each index-field specified in the Map function, and a mapping to the relevant document.",
                "",
                "* These indexed terms can later be queried on to get their matching documents, the documents that contain them.",
                "",
                "* In this example, field `TotalItemsOrdered` is computed and will be stored in the index, see in the next step."
            ],
            "Assets": [
                {
                    "Title": "Map Indexes",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/indexes/map-indexes"
                },
                {
                    "Title": "Static Indexes",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/10-static-indexes-and-other-advanced-options#static-indexes-and-other-advanced-options"
                },
                {
                    "Title": "Working with Indexes",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/12-working-with-indexes#working-with-indexes"
                }
            ]
        },
        {
            "Title": "Store field in Index",
            "Slug": "step-5",
            "DescriptionLines": [
                "* Use `store()` with _FieldStorage.YES_ to store the specified field in the index.",
                "",
                "* At query time, the value will be fetched directly from the index instead of from the document store.",
                "",
                "* Use storeAllFields(FieldStorage.YES) to store ALL the index-fields.",
                "",
                "* Note: Storing fields on the index will increase the index size on disk."
            ],
            "Assets": [
                {
                    "Title": "Storing Data in the Index",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/learn/inside-ravendb-book/reader/4.0/10-static-indexes-and-other-advanced-options#storing-data-in-the-index"
                },
                {
                    "Title": "Indexes: Storing Data",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/5.3/java/indexes/storing-data-in-index"
                },
                {
                    "Title": "Studio: Index Field Options",
                    "Type" : "link",
                    "Url"  : "https://ravendb.net/docs/article-page/latest/java/studio/database/indexes/create-map-index#index-field-options"
                }
            ]
        },
        {
            "Title": "Query for documents",
            "Slug" : "step-6",
            "DescriptionLines": [
                "* Query the 'Orders' collection using the defined index.",
                "",
                "* The orders' documents can be _filtered_ by the index-fields defined in `OrdersQuantity_ByCompany.IndexEntry`",
                "",
                "* The resulting documents will include only orders that where made by 'companyId'."
            ],
            "Assets": [

                {
                    "Title": "Filtering Results - Basics Demo",
                    "Type" : "demo",
                    "Url"  : "/java/queries/filtering-results-basics"
                }
            ]
        },
        {
            "Title": "Project Results",
            "Slug" : "step-7",
            "DescriptionLines": [
                "* Use `selectFields()` to make the server return only the fields defined in the 'OrdersQuantity_ByCompany.OrderProjectedDetails' class per document result instead of the whole document.<br>",
                "  * If the field is _stored in the index_ - the server will fetch it from the index<br>",
                "  * If the field is _not stored in the index_ - the server will fetch it from the document store",
                "",
                "* In this example:<br>",
                "  * 'TotalItemsOrdered' is fetched from the index<br>",
                "  *  'OrderedAt' if fetched from the document store"
            ],
            "Assets": [
                {
                    "Title": "Project Index Result Demo",
                    "Type" : "demo",
                    "Url"  : "/static-indexes/project-index-results"
                },
                {
                    "Title": "selectFields()",
                    "Type": "link",
                    "Url": "https://ravendb.net/docs/article-page/latest/java/indexes/querying/projections#select"
                }
            ]
        },
        {
            "Title": "Execute the Query",
            "Slug" : "step-8",
            "DescriptionLines": [
                "* The _ordersQuery_ variable only stores the query definition.<br>",
                "  Execute the query by calling `toList()`, or any other method that forces immediate execution.",
                "",
                "* The final query results include the projected details for orders that where made by 'companyId'.",
                "",
                "* The resulting objects are Not tracked by the session since they are not the stored documents but only partial data."
            ],
            "Assets": [
                {
                    "Title": "Query Overview",
                    "Type" : "demo",
                    "Url"  : "/java/queries/query-overview"
                }
            ]
        }
    ]
}
